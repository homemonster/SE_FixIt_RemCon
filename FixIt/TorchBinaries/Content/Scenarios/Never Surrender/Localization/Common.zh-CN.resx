<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="DefendQuest_Detail_Incoming" xml:space="preserve">
    <value>有袭击！</value>
  </data>
  <data name="DefendQuest_Objective" xml:space="preserve">
    <value>保卫基地。</value>
  </data>
  <data name="DefendQuest_Title" xml:space="preserve">
    <value>友好机器人：保卫基地</value>
  </data>
  <data name="Description" xml:space="preserve">
    <value>高级别的生存世界。无人机会炸毁信标，做好防御工作保护好信标。 可以自己或者组队防御。该如何做，就看你的了！</value>
  </data>
  <data name="Failed_Detail" xml:space="preserve">
    <value>信标已被炸毁，防卫失败。</value>
  </data>
  <data name="Failed_Title" xml:space="preserve">
    <value>友好机器人：失败</value>
  </data>
  <data name="Incoming" xml:space="preserve">
    <value>有偷袭！</value>
  </data>
  <data name="InformationQuest_Detail" xml:space="preserve">
    <value>工程师，欢迎你。做好准备工作。准备完毕后去屏幕显示的地点。你的任务是尽最大可能做好防御工作。</value>
  </data>
  <data name="InformationQuest_Title" xml:space="preserve">
    <value>友好机器人：信息</value>
  </data>
  <data name="Name" xml:space="preserve">
    <value>决不投降</value>
  </data>
  <data name="Persons_VirtualAssistant" xml:space="preserve">
    <value>友好机器人</value>
  </data>
  <data name="Wave" xml:space="preserve">
    <value>袭击</value>
  </data>
  <data name="WaveCompleteQuest_Detail" xml:space="preserve">
    <value>敌军准备再次袭击。</value>
  </data>
  <data name="WaveCompleteQuest_Detail_GoodJob" xml:space="preserve">
    <value>干得漂亮！修复设施，建更多的防御工事抵抗袭击。</value>
  </data>
  <data name="WaveCompleteQuest_Title" xml:space="preserve">
    <value>友好机器人：袭击结束</value>
  </data>
  <data name="WaveIn_Objective" xml:space="preserve">
    <value>袭击中</value>
  </data>
  <data name="WelcomeQuest_Detail" xml:space="preserve">
    <value>工程师，欢迎来到基地。你的任务是尽一切可能保护好信标。做好准备工作抵抗袭击。</value>
  </data>
  <data name="WelcomeQuest_Title" xml:space="preserve">
    <value>友好机器人：欢迎</value>
  </data>
</root>